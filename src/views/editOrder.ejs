<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Order</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            color: #333;
            margin: 0;
            padding: 20px;
        }

        h1 {
            text-align: center;
            color: #007bff;
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }

        th {
            background-color: #007bff;
            color: white;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 5px;
        }

        .quantity-controls button {
            padding: 8px;
            border: none;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            border-radius: 4px;
        }

        .quantity-controls input {
            width: 60px;
            text-align: center;
            font-size: 16px;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            padding: 5px;
        }

        .quantity-controls button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .table-total {
            text-align: right;
            font-size: 18px;
            font-weight: bold;
            color: #333;
            margin-top: 10px;
        }

        .submit-button {
            display: block;
            width: 100%;
            max-width: 200px;
            padding: 15px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 18px;
            margin-top: 20px;
            text-align: center;
        }

        .submit-button:hover {
            background-color: #0056b3;
        }

        /* Mobile Responsive Styles */
        @media (max-width: 768px) {
            table {
                border: 0;
            }

            thead {
                display: none;
            }

            tr {
                margin-bottom: 10px;
                display: block;
                border-bottom: 2px solid #dee2e6;
            }

            td {
                display: flex;
                justify-content: space-between;
                padding: 10px;
                font-size: 14px;
                border: none;
                text-align: right;
            }

            td::before {
                content: attr(data-label);
                flex-basis: 50%;
                text-align: left;
                font-weight: bold;
                color: #007bff;
            }

            .quantity-controls {
                justify-content: flex-start;
            }

            .table-total {
                font-size: 20px;
                text-align: left;
                margin-top: 20px;
            }
        }
    </style>
</head>
<body>
    <h1>Edit Order Items</h1>
    <form action="/admin/order/edit/<%= order._id %>" method="POST">
        <table>
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Size</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <% let overallTotal = 0; %>
                <% order.order_items.forEach((item, index) => { 
                    const total = (item.quantity * item.price).toFixed(2);
                    overallTotal += parseFloat(total);
                %>
                    <tr>
                        <td data-label="Product Name"><%= item.product_id.name %></td>
                        <td data-label="Quantity">
                            <div class="quantity-controls">
                                <button type="button" onclick="decreaseQuantity('<%= index %>')">-</button>
                                <input id="quantity-<%= index %>" name="items[<%= index %>][quantity]" value="<%= item.quantity %>" type="number" min="0" step="1" onchange="calculateTotal('<%= index %>')">
                                <button type="button" onclick="increaseQuantity('<%= index %>')">+</button>
                            </div>
                        </td>
                        <td data-label="Price" id="price-<%= index %>">KWD <%= item.price.toFixed(2) %></td>
                        <td data-label="Size"><%= item.size %></td>
                        <td data-label="Total" id="total-<%= index %>">KWD  <%= total %></td>
                        <input type="hidden" name="items[<%= index %>][product_id]" value="<%= item.product_id._id %>">
                        <input type="hidden" name="items[<%= index %>][price]" value="<%= item.price %>">
                        <input type="hidden" name="items[<%= index %>][size]" value="<%= item.size %>">
                    </tr>
                <% }); %>
            </tbody>
        </table>
        <div class="table-total">Total: KWD <span id="overall-total"><%= overallTotal.toFixed(2) %></span></div>
        <button type="submit" class="submit-button">Accept Order</button>
    </form>
    <button type="button" class="submit-button" onclick="rejectOrder('<%= order._id %>')">Reject Order</button>
    <script type="text/javascript">
        function calculateTotal(index) {
            const quantity = parseInt(document.getElementById(`quantity-${index}`).value, 10);
            const price = parseFloat(document.getElementById(`price-${index}`).innerText.slice(3));
            const total = (quantity * price).toFixed(2);
            document.getElementById(`total-${index}`).innerText = `KWD${total}`;

            calculateOverallTotal();
        }

        function calculateOverallTotal() {
            let overallTotal = 0;
            const totalElements = document.querySelectorAll('[id^="total-"]');
            totalElements.forEach(el => {
                overallTotal += parseFloat(el.innerText.slice(3));
            });
            document.getElementById('overall-total').innerText = overallTotal.toFixed(2);
        }

        function increaseQuantity(index) {
            const quantityInput = document.getElementById(`quantity-${index}`);
            let currentQuantity = parseInt(quantityInput.value, 10);
            quantityInput.value = currentQuantity + 1;

            calculateTotal(index);
        }

        function decreaseQuantity(index) {
            const quantityInput = document.getElementById(`quantity-${index}`);
            let currentQuantity = parseInt(quantityInput.value, 10);
            if (currentQuantity > 0) {
                quantityInput.value = currentQuantity - 1;

                calculateTotal(index);
            }
        }
        function rejectOrder(orderId) {
            const baseUrl = '<%= baseUrl %>'; // Make sure to set baseUrl correctly
            const rejectUrl =
                `${baseUrl}/api/v1/order/confirm?id=${orderId}&status=Canceled`
            fetch(rejectUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then((response)=>{
              if(response.ok){
                alert("Order Rejected Successfully")
              }
                console.log(response);

            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while rejecting the order.');
            });
        }

        // Initial calculation
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('input[type="number"]').forEach((input, index) => {
                input.addEventListener('change', () => calculateTotal(index));
                calculateTotal(index);  // Ensure total is calculated on load
            });
        });
    </script>
</body>
</html>
